; script is designed for designed for "Dark and Darker" Lobby Management
; this is in development and made for my personal use and testing
;   as such - there are no warranties or gaurentees
;           - use at your own risk
; file use: setup main runtime keybinds to functions
; written and maintained by matthewjearly@gmail.com

#SingleInstance Force

#include LobbyButtonFunctionsLibrary.ank

global isBusy := false

; aux function
; Lock/Unlock are to wrap around keybinds so you can't accidently spam
Lock() {
  global
  if isBusy {
    return
  } else {
    isBusy := true
  }
}

; aux function
Unlock() {
  global
  if isBusy {
    isBusy := false
  }
}

; MERCHANTS
; GOBLIN BUY 
#HotIf WinActive("Dark and Darker")
^5::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToGoblinBuy()
  Unlock()
}

; GOBLIN RETRIEVAL
#HotIf WinActive("Dark and Darker")
^Numpad6::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GetAllFromGoblin()
  Unlock()
}

#HotIf WinActive("Dark and Darker")
>^g::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GetAllFromGoblin()
  Unlock()
}


; ALCHEMIST SERVICE 
#HotIf WinActive("Dark and Darker")
^6::
{
  if isBusy { 
    return 
  } else {
    Lock()

  }
  GoToAlchemistService()
  Unlock()
}


; LEATHERSMITH SERVICE 
#HotIf WinActive("Dark and Darker")
^7::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToLeatherSmithService()
  Unlock()
}

; ARMORER SERVICE
#HotIf WinActive("Dark and Darker")
^8::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToArmorerService()
  Unlock()
}

; TAILOR SERVICE
#HotIf WinActive("Dark and Darker")
^9::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToTailorService()
  Unlock()
}

; WEAPONSMITH SERVICE
#HotIf WinActive("Dark and Darker")
^0::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToWeaponsmithService()
  Unlock()
}

; Keybind setup for HitPlay (file structure follows this pattern)
#HotIf WinActive("Dark and Darker")
^Numpad0::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  HitPlay()
  Unlock()
}

; hotswap to prev character
#HotIf WinActive("Dark and Darker")
^Numpad2::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  HotswapCharacters()
  Unlock()
}

; SQUIRE
#HotIf WinActive("Dark and Darker")
^Numpad3::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToSquireAndFill()
  Unlock()
}

; EXPRESSMAN GATHER
#HotIf WinActive("Dark and Darker")
^Numpad5::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  ExpressmanExpress()
  Unlock()
}

#HotIf WinActive("Dark and Darker")
>^E::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  ExpressmanExpress()
  Unlock()
}

#HotIf WinActive("Dark and Darker")
>^C::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  CockatriceGather()
  Unlock()
}

; COLLECTOR
#HotIf WinActive("Dark and Darker")
^Numpad7::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToCollector()
  Unlock()
}

#HotIf WinActive("Dark and Darker")
^Numpad8::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToSellAtVendor()
  Unlock()
}

; TRADE
#HotIf WinActive("Dark and Darker")
^Numpad9::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToMarketplaceSearch()
  Unlock()
}

; PURCHASE BANDAGES
#HotIf WinActive("Dark and Darker")
<^NumpadSub::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  BuyALotOfBandages()
  Unlock()
}

; PURCHASE LESS BANDAGES
#HotIf WinActive("Dark and Darker")
>^NumpadSub::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  BuyBandages()
  Unlock()
}

; PURCHASE POTIONS
#HotIf WinActive("Dark and Darker")
<^NumpadAdd::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  BuyALotOfPotions()
  Unlock()
}

; PURCHASE LESS POTIONS
#HotIf WinActive("Dark and Darker")
>^NumpadAdd::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  BuyPotions()
  Unlock()
}


/*
; unassigned
#HotIf WinActive("Dark and Darker")
^NumpadMult::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  ; do something here
  Unlock()
}
*/

; CLASS SPEC
#HotIf WinActive("Dark and Darker")
^NumpadDot::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToClassSpec()
  Unlock()
}

; NEXT MARKETPLACE TRADER
#HotIf WinActive("Dark and Darker")
^NumpadDiv::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  CycleToNextAuctioneer()
  Unlock()
}

; ALT VERSION HOTKEYS (IN CASE USER HAS NO NUMPAD)

; Keybind setup for HitPlay (file structure follows this pattern)
#HotIf WinActive("Dark and Darker")
>^q::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  HitPlay()
  Unlock()
}

; hotswap to prev character
#HotIf WinActive("Dark and Darker")
>^h::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  HotswapCharacters()
  Unlock()
}

#HotIf WinActive("Dark and Darker")
>^k::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToSquireAndFill()
  Unlock()
}


#HotIf WinActive("Dark and Darker")
>^!k::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  FullSquireReset()
  Unlock()
}


; COLLECTOR
#HotIf WinActive("Dark and Darker")
>^j::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToCollector()
  Unlock()
}

#HotIf WinActive("Dark and Darker")
>^v::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToSellAtVendor()
  Unlock()
}

; TRADE
#HotIf WinActive("Dark and Darker")
>^m::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToMarketplaceSearch()
  Unlock()
}

; PURCHASE BANDAGES
#HotIf WinActive("Dark and Darker")
<^b::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  BuyALotOfBandages()
  Unlock()
}

; PURCHASE LESS BANDAGES
#HotIf WinActive("Dark and Darker")
>^b::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  BuyBandages()
  Unlock()
}

; PURCHASE POTIONS
#HotIf WinActive("Dark and Darker")
<^o::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  BuyALotOfPotions()
  Unlock()
}

; PURCHASE LESS POTIONS
#HotIf WinActive("Dark and Darker")
>^o::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  BuyPotions()
  Unlock()
}

; CLASS SPEC
#HotIf WinActive("Dark and Darker")
^p::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  GoToClassSpec()
  Unlock()
}

; Vender All Collectables Soft Non Destructive
#HotIf WinActive("Dark and Darker")
>^x::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  VendorEntireInventoryOfCollectables()
  Unlock()
}

; Vender All Non-Collectables Soft Non Destructive

#HotIf WinActive("Dark and Darker")
>^z::
{
  if isBusy { 
    return 
  } else {
    Lock()
  }
  VendorEntireInventoryOfNonCollectables()
  Unlock()
}

#HotIf WinActive("Dark and Darker")
>^!q::
{
    if isBusy { 
    return 
  } else {
    Lock()
  }
  ToolBeltAndRequeue()
  Unlock()
}


#HotIf WinActive("Dark and Darker")
>^T:: {
  if isBusy {
    return
  } else {
    Lock()
  }
  TransferInventory()
  Unlock()
}


#HotIf WinActive("Dark and Darker")
>^l:: {
  if isBusy {
    return
  } else {
    Lock()
  }
  PurchaseLockpicks()
  Unlock()
}


#HotIf WinActive("Dark and Darker")
>^1:: {
  if isBusy {
    return
  } else {
    Lock()
  }
  GoToSets()
  Unlock()
}


#HotIf WinActive("Dark and Darker")
>^;:: {
  if isBusy {
    return
  } else {
    Lock()
  }
  PurchaseSurgicalKit()
  Unlock()
}

#HotIf WinActive("Dark and Darker")
>^p:: {
  if isBusy {
    return
  } else {
    Lock()
  }
  BuyPickaxe()
  Unlock()
}


; LEFT SHIFT + U - set volume to zero (u must have menu open, press esc first)
#HotIf WinActive("Dark and Darker")
<^u:: {
  if isBusy {
    return
  } else {
    Lock()
  }
  SetVolumeToZero()
  Unlock()
}

#HotIf WinActive("Dark and Darker")
>^u:: {
    if isBusy {
    return
  } else {
    Lock()
  }
  SetVolumeToFifty()
  Unlock()
}

; [I]nvest- buys things from traders that have good resale value
;  - green potions and bandages
#HotIf WinActive("Dark and Darker")
>^!i:: {
  if isBusy {
    return
  } else {
    Lock()
  }
  BuyGreenPotionsAndBandages()
  Unlock()
}

/*
; Gear Up from Market Search: RightControl+Alt+g
; in testing DON'T USE YET
#HotIf WinActive("Dark and Darker")
>^!g:: {
  if isBusy {
    return
  } else {
    Lock()
  }

  BuyGearOffMarketFromFile("GearBuyingSettings.txt")
  
  /* BARBARIAN SAMPLE GEAR
  gear := [
    "barbu", "adventurer tunic", 
    "adventurer cloak", "ring of quickness", 
    "fox pendant", "bardiche",
    "ring of courage", "lightfoot boots",
    "loose trousers",
    "quarterstaff",
    "reinforced gloves"
   ]
    END BARBARIAN SAMPLE GEAR */

   /* WARLOCK SAMPLE GEAR (Banshee/GHOST KING HUNTING)
  gear := [
    "leather cap", 
    "Occultist Tunic", 
    "adventurer cloak",
    "ring of quickness", 
    "fox pendant",
    "longsword",
    "ring of courage",
    "lightfoot boots",
    "occultist pants",
    "spellbook",
    "reinforced gloves"
  ]
    END WARLOCK SAMPLE GEAR */

    /* FIGHTER SAMPLE GEAR
      gear := [
      "Hounskull",
      "Peace",
      "Grand Brig",
      "Padded Leg",
      "Light Gaunt",
      "Buckled Boots",
      "Mercurial",
      "Ring of Vitality",
      "Ring of Vitality",
      "Longsword",
      "Recurve"
   ]
   END Fighter */

   /* CLERIC SMITE/HEALER HYBRID SAMPLE GEAR
      gear := [
   ;   "spangen",
      "arcane garb",
   ;   "Padded Leg",
    ;  "Light Gaunt",
    ;  "Lightfoot Boots",
    ;  "Mercurial",
    ;  "MONKEY",
     ; "Ring of Quickness",
     ; "Ring of Quickness",
    ;  "Morning Star",
    ;  "Ceremonial Staff"
   ]
  */

 /* MODIFIER TEST CODE
  modifier1 := [
  ;  "vig",
    "vig",
   ; "str",
  ;  "vig",
  ;  "vig",
  ;  "max health bonus",
  ;  "max health bonus",
  ;  "max health bonus",
  ;  "max health bonus",
  ;  "true phys",
  ;  "mem"
    ]
    
    modifier2 := [
    ;  "str",
      "str",
    ;  "str",
   ;   "dex",
     ; "dex",
    ;  "action",
    ;  "all",
    ;  "all",
    ;  "all",
    ;  "action",
     ; "mem"
    ]
    */

/* WORKER CODE
  if (
    gear.Length = modifier1.Length and
    gear.Length = modifier2.Length
    )        ; confirm same size
  {
    Loop gear.Length{
      PurchaseFromMarket(gear[A_Index], 3, modifier1[A_Index], modifier2[A_Index])
      Loop 10 { 
        LS()
      }
    }
  }

  */

  Unlock()
}
*/